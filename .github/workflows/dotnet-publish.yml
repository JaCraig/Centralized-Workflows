name: .NET Publish

on: 
  workflow_call:
    inputs:
      dotnet-version:
        type: string
        description: 'The version of the .NET SDK to use'
        required: true
        default: '8.0.x'
      user:
        type: string
        description: 'The user to use for the commit'
        required: true
      user-email:
        type: string
        description: 'The email to use for the commit'
        required: true
      coveralls-upload:
        type: string
        description: 'Upload specified coverage report to coveralls.io'
        required: false
        default: ""
      test-filter:
        type: string
        description: 'The filter to use for the test'
        required: false
        default: ''
    secrets:
        NUGET_API_KEY:
            required: true
        PERSONAL_ACCESS_TOKEN:
            required: true      

jobs:
  build:
    env:
      BUILD_CONFIG: 'Release'

    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['${{inputs.dotnet-version}}']

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup .NET SDK ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v4.1.0
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
        
    - name: Install Versionize
      run: dotnet tool install --global Versionize
    
    - name: Setup git
      run: |
            git config --local user.email "${{ inputs.user-email }}"
            git config --local user.name "${{ inputs.user }}"
            
    - name: Versionize Release
      id: versionize
      run: versionize --exit-insignificant-commits
      continue-on-error: true
      
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration $BUILD_CONFIG
      
    - name: Test
      run: dotnet test /p:CollectCoverage=true /p:CoverletOutput=TestResults-${{ matrix.dotnet-version }}/ /p:CoverletOutputFormat=lcov /p:Configuration=$BUILD_CONFIG --no-build --verbosity normal --logger trx --results-directory "TestResults-${{ matrix.dotnet-version }}" ${{ inputs.test-filter }}
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: dotnet-results-${{ matrix.dotnet-version }}
        path: TestResults-${{ matrix.dotnet-version }}
      if: ${{ always() }}

    - name: Publish coverage report to coveralls.io
      uses: coverallsapp/github-action@v2
      if: ${{ inputs.coveralls-upload != '' }}
      with:
        path-to-lcov: ${{ inputs.coveralls-upload }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        format: lcov
      
    - name: Upload NuGet package
      uses: actions/upload-artifact@v4
      with:
        name: NugetPackage
        path: ./**/*.nupkg
      if: steps.versionize.outcome == 'success'
      
    - name: Upload Symbol package
      uses: actions/upload-artifact@v4
      with:
        name: SymbolPackage
        path: ./**/*.snupkg
      if: steps.versionize.outcome == 'success'

    - name: Push changes to Github
      if: steps.versionize.outcome == 'success'
      uses: ad-m/github-push-action@v0.8.0
      with:
        github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        branch: ${{ github.ref }}
        force: true
        tags: true
    
    - name: Upload package to NuGet
      if: steps.versionize.outcome == 'success'
      run: dotnet nuget push "**/*.nupkg" -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json